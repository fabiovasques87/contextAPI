{"ast":null,"code":"import { createContext } from \"react\";\nimport { userInitialState, userReducer } from '../reducers/userReducer';\nconst initialState = {\n  user: userInitialState\n};\nexport const Context = /*#__PURE__*/createContext({\n  state: initialState,\n  dispatch: () => null\n});\nconst mainReducer = (state, action) => ({\n  user: userReducer(user, action)\n});\n\n// type ContextType = {\n//     name: string;\n//     age: number;\n// }\n\n// const initialState = {\n//     name : 'Fábio',\n//     age: 35\n// }\n\n// export const  Context = createContext<ContextType>(initialState);\n\n// export const ContextProvider= ({ children }:React.PropsWithChildren) => {\n//     return (\n//         <Context.Provider value={initialState}> \n//             {children}\n//         </Context.Provider>\n//     );\n// }","map":{"version":3,"names":["createContext","userInitialState","userReducer","initialState","user","Context","state","dispatch","mainReducer","action"],"sources":["/home/fabio/Documentos/B7web/reactjs/contextexample/src/contexts/Context.tsx"],"sourcesContent":["\n\n import React, { createContext, useReducer } from \"react\";\n\n import {UserType,userInitialState, userReducer } from '../reducers/userReducer';\nimport { reducerActionType } from \"../types/reducerActionType\";\n\n\n\n\ntype initialStateType = {\n    user: UserType;\n}\n\ntype ContextType  = {\n    state: initialStateType;\n    dispatch: React.Dispatch<any>;\n }\n\nconst initialState = {\n    user: userInitialState\n}\n\nexport const Context  = createContext<ContextType>({\n    state: initialState,\n    dispatch: () => null\n});\n\n\nconst mainReducer = (state: initialStateType, action: reducerActionType) => ({\n    user: userReducer(user, action)\n});\n\n// type ContextType = {\n//     name: string;\n//     age: number;\n// }\n\n// const initialState = {\n//     name : 'Fábio',\n//     age: 35\n// }\n\n// export const  Context = createContext<ContextType>(initialState);\n\n\n// export const ContextProvider= ({ children }:React.PropsWithChildren) => {\n//     return (\n//         <Context.Provider value={initialState}> \n//             {children}\n//         </Context.Provider>\n//     );\n// }\n\n\n"],"mappings":"AAEC,SAAgBA,aAAa,QAAoB,OAAO;AAExD,SAAiBC,gBAAgB,EAAEC,WAAW,QAAQ,yBAAyB;AAehF,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAEH;AACV,CAAC;AAED,OAAO,MAAMI,OAAO,gBAAIL,aAAa,CAAc;EAC/CM,KAAK,EAAEH,YAAY;EACnBI,QAAQ,EAAE,MAAM;AACpB,CAAC,CAAC;AAGF,MAAMC,WAAW,GAAG,CAACF,KAAuB,EAAEG,MAAyB,MAAM;EACzEL,IAAI,EAAEF,WAAW,CAACE,IAAI,EAAEK,MAAM;AAClC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}